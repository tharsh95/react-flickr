{"version":3,"sources":["components/Defaultdata.jsx","components/Navbar.jsx","components/FetchingSearch.jsx","App.js","reportWebVitals.js","index.js"],"names":["Modal","setAppElement","Defaultdata","useState","img","setImg","modalImg","setModalImg","modalIsOpen","setModalIsOpen","useEffect","axios","get","then","res","data","photos","photo","result","picArray","map","el","srcPath","server","id","secret","onClick","handleClick","src","alt","owner","className","isOpen","onRequestClose","style","overlay","backgroundColor","content","display","justifyContent","alignContent","Navbar","props","type","name","onChange","FetchingSearch","page","setPage","perpage","search","setSearch","searchA","setSearchA","handleSubmit","sarray","searchArray","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","setTimeout","e","target","value","App","def","setDef","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.16ee550a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport './defaultdata.css'\r\nimport { useEffect } from 'react/cjs/react.development'\r\nimport Modal from 'react-modal'\r\n// import Navbar from './Navbar'\r\nModal.setAppElement('#root')\r\nconst Defaultdata = () => {\r\n    const [img, setImg] = useState([])\r\n    const [modalImg, setModalImg] = useState(\"\")\r\n    const [modalIsOpen, setModalIsOpen] = useState(false)\r\n\r\n        useEffect(() => {\r\n\r\n        axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=7dac89ea8f85859230ab7bd53e97ad60&format=json&nojsoncallback=1`)\r\n            .then(function (res) {\r\n                return (res.data.photos.photo)\r\n            })\r\n            .then(function (result) {\r\n                let picArray = result.map((el) => {\r\n                    let srcPath = `https://live.staticflickr.com/${el.server}/${el.id}_${el.secret}_w.jpg`\r\n                    return (<>\r\n                        <img onClick={() => handleClick(srcPath)} key={el.id} src={srcPath} alt={el.owner} />\r\n                        \r\n                        </>\r\n                    )\r\n                })\r\n                setImg(picArray)\r\n            })\r\n\r\n\r\n    }, [])\r\n    const handleClick = (src) =>{\r\n        setModalIsOpen(true)\r\n        setModalImg(src)\r\n        // console.log(modalImg)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"header\">Flickr</div>\r\n\r\n        <div className=\"imgContainer\">\r\n            {img}\r\n            <Modal \r\n            isOpen={modalIsOpen} \r\n             onRequestClose={() => setModalIsOpen(false)} \r\n             style={\r\n                 {\r\n                     overlay:{\r\n                         backgroundColor:'grey'\r\n                     },\r\n                     content:{\r\n                         backgroundColor:\"black\",\r\n                         display:'flex',\r\n                         justifyContent:'center',\r\n                         alignContent:'center'\r\n                        \r\n\r\n                     }\r\n                 }\r\n             }>\r\n            \r\n                {<img id=\"modalImg\" key={modalImg} src={modalImg} alt={modalImg}/>}\r\n\r\n            </Modal>\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Defaultdata\r\n\r\n","import React from 'react'\r\n\r\nimport './Navbar.css'\r\n\r\nconst Navbar = (props) => {\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"navbar\">\r\n                <div className=\"navHeader\">Search Photos</div>\r\n                <div>\r\n                    <input className=\"searchInput\" type=\"text\" name=\"photo\" onChange={props.onChange} />\r\n                    <button onClick={props.onClick} >Search</button>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import Modal from 'react-modal'\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from './Navbar';\r\nimport './FetchingSearch.css'\r\nconst FetchingSearch = (props) => {\r\n    const [page,setPage]=useState(1)\r\n    let perpage = 9;\r\n    const [search, setSearch] = useState(\"\")\r\n    const [searchA, setSearchA] = useState([])\r\n    const [modalImg, setModalImg] = useState(\"\")\r\n\r\n    const [modalIsOpen, setModalIsOpen] = useState(false)\r\n    function handleChange(e) {\r\n        setSearch(e.target.value)\r\n\r\n    }\r\n    function handleSubmit() {\r\n        axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=716e02262760b235130b0ab8066992cb&tags=${search}&safe_search=&per_page=${perpage}&page=${page}&format=json&nojsoncallback=1`)\r\n\r\n            .then(function (res) {\r\n                return (res.data.photos.photo)\r\n            })\r\n            .then(function (sarray) {\r\n                let searchArray = sarray.map(el => {\r\n                    let srcPath = `https://live.staticflickr.com/${el.server}/${el.id}_${el.secret}_w.jpg`\r\n                    return (\r\n\r\n                        <img onClick={()=>handleClick(srcPath)} key={el.id} src={srcPath} alt={el.owner} />\r\n                    \r\n                    )\r\n                })\r\n                setSearchA(searchArray)\r\n            })\r\n    }\r\n    const handleClick =(src)=>{\r\n        setModalIsOpen(true)\r\n        setModalImg(src)\r\n    }\r\n    window.onscroll = function () {\r\n        if (window.innerHeight + document.documentElement.scrollTop >= document.documentElement.offsetHeight-5 ) {\r\n            setTimeout(() => {\r\n                perpage=perpage+9\r\n                setPage(page=>page+1)\r\n                handleSubmit()\r\n\r\n            }, 300);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar onChange={handleChange} onClick={handleSubmit} />\r\n            <div className=\"searchContainer\">\r\n                {searchA}\r\n                <Modal \r\n            isOpen={modalIsOpen} \r\n             onRequestClose={() => setModalIsOpen(false)} \r\n             style={\r\n                 {\r\n                     overlay:{\r\n                         backgroundColor:'grey'\r\n                     },\r\n                     content:{\r\n                         backgroundColor:\"black\",\r\n                         display:'flex',\r\n                         justifyContent:'center',\r\n                         alignContent:'center'\r\n                        \r\n\r\n                     }\r\n                 }\r\n             }>\r\n            \r\n                {<img id=\"modalImg\" key={modalImg} src={modalImg} alt={modalImg}/>}\r\n\r\n            </Modal>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FetchingSearch","import { useState } from 'react';\nimport './App.css';\nimport Defaultdata from './components/Defaultdata';\nimport FetchingSearch from './components/FetchingSearch';\n\nfunction App() {\n  const [def, setDef] = useState(true)\n  function handleSearch(){\n    setDef(!def)\n  }\n  function handleHome(){\n    setDef(!def)\n  \n\n  }\n    return (\n    \n    <div className=\"App\">\n      <button onClick={()=>handleHome()} disabled={def}>Home</button>\n      <button onClick={()=>handleSearch()} disabled={!def}>Search Images</button>\n     { def===true?\n      <Defaultdata/>:\n      <FetchingSearch/>}\n      \n      \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}